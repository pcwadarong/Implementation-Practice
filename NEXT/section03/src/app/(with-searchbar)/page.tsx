export default function Home() {
  return <></>;
}

/*
서버 컴포넌트: js 번들링(2차)를 진행하지 않고, 서버에서만 렌더링한 후 사용함
굳이 인터렉션이 필요 없는 것은 2차 번들링 할 필요도 x

단, 클라이언트 컴포넌트는 클라이언트에서만 실행되지 않는다.
서버/클라이언트 양쪽에서 실행되므로 클라이언트에서만 실행하려면 useEffect가 필수!

---

서버 컴포넌트가 default
console.log('home'); 등은 terminal에서만 작동함
반대로 useEffect 등은 'use client'를 작성하지 않으면 작동 불가

웬만해선 서버 컴포넌트로만 만들 것. 상호작용 있는 것만 한정적으로 클라이언트

---

클라이언트 컴포넌트에서 서버 컴포넌트를 그상태로 import할 수 없다.
서버 컴포넌트는 서버에서만 실행되는데 클라이언트는 두 번 실행되어야 하므로 불가능
이 경우 서버 컴포넌트가 클라이언트 컴포넌트로 변환되어 실행된다.

그렇다면 어떻게 해야 하는가? 
-> 바로 import하는 대신, children props로 받아서 렌더링하도록 한다.

---
서버 컴포넌트에서 클라이언트 컴포넌트에게 직렬화 되지 않는 Props는 전달 불가능
직렬화란, 데이터 전송을 위해 객체 등의 복잡한 형식을 {name:'bla', age:'18'} 등으로 간단화하는 것
자바스크립트의 함수는 코드 블럭이므로 직렬화가 불가능하다.
처음 렌더링을 할 때, 서버컴포넌트를 먼저 다 렌더링하고 (RSC - React Server Component - PAYLOAD) 클라이언트 컴포넌트를 렌더링하는데, 이 과정에서 함수를 넘겨줄 수가 없음.
*/
